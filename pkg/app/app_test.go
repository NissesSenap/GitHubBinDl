package app

import (
	"context"
	"io/ioutil"
	"testing"

	"github.com/go-logr/logr"
	logrTesting "github.com/go-logr/logr/testing"
	"github.com/stretchr/testify/assert"
)

// if cat is used as the cli and a file is specified i test to see that the output matches the text from the original file
func TestSaveCompletion(t *testing.T) {

	const catLocation = "/usr/bin/"
	const catName = "cat"
	const completionLocation = "/tmp/testData.go"
	var commandArgs = []string{"app_test.go"}
	ctx := logr.NewContext(context.Background(), logrTesting.NullLogger{})

	err := saveCompletion(ctx, catLocation, catName, completionLocation, commandArgs)
	if err != nil {
		t.Errorf("Unable to get any output from saveCompletion")
	}

	output, err := ioutil.ReadFile(completionLocation)
	if err != nil {
		t.Errorf("Unable to open file: %v generated by saveCompletion", completionLocation)
	}

	expectedOutput, err := ioutil.ReadFile(commandArgs[0])
	if err != nil {
		t.Errorf("Unable to open test file: %v", commandArgs[0])
	}

	assert.ElementsMatch(t, output, expectedOutput)
}
